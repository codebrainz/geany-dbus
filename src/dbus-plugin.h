/* dbus-plugin.h generated by valac 0.10.0, the Vala compiler, do not modify */


#ifndef __DBUS_PLUGIN_H__
#define __DBUS_PLUGIN_H__

#include <glib.h>
#include <geanyplugin.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>

G_BEGIN_DECLS


#define GEANY_DBUS_TYPE_SERVER (geany_dbus_server_get_type ())
#define GEANY_DBUS_SERVER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GEANY_DBUS_TYPE_SERVER, GeanyDBusServer))
#define GEANY_DBUS_SERVER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GEANY_DBUS_TYPE_SERVER, GeanyDBusServerClass))
#define GEANY_DBUS_IS_SERVER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GEANY_DBUS_TYPE_SERVER))
#define GEANY_DBUS_IS_SERVER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GEANY_DBUS_TYPE_SERVER))
#define GEANY_DBUS_SERVER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GEANY_DBUS_TYPE_SERVER, GeanyDBusServerClass))

typedef struct _GeanyDBusServer GeanyDBusServer;
typedef struct _GeanyDBusServerClass GeanyDBusServerClass;
typedef struct _GeanyDBusServerPrivate GeanyDBusServerPrivate;

#define GEANY_DBUS_TYPE_APPLICATION (geany_dbus_application_get_type ())
#define GEANY_DBUS_APPLICATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GEANY_DBUS_TYPE_APPLICATION, GeanyDBusApplication))
#define GEANY_DBUS_APPLICATION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GEANY_DBUS_TYPE_APPLICATION, GeanyDBusApplicationClass))
#define GEANY_DBUS_IS_APPLICATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GEANY_DBUS_TYPE_APPLICATION))
#define GEANY_DBUS_IS_APPLICATION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GEANY_DBUS_TYPE_APPLICATION))
#define GEANY_DBUS_APPLICATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GEANY_DBUS_TYPE_APPLICATION, GeanyDBusApplicationClass))

typedef struct _GeanyDBusApplication GeanyDBusApplication;
typedef struct _GeanyDBusApplicationClass GeanyDBusApplicationClass;

#define GEANY_DBUS_TYPE_INTERFACE_PREFERENCES (geany_dbus_interface_preferences_get_type ())
#define GEANY_DBUS_INTERFACE_PREFERENCES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GEANY_DBUS_TYPE_INTERFACE_PREFERENCES, GeanyDBusInterfacePreferences))
#define GEANY_DBUS_INTERFACE_PREFERENCES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GEANY_DBUS_TYPE_INTERFACE_PREFERENCES, GeanyDBusInterfacePreferencesClass))
#define GEANY_DBUS_IS_INTERFACE_PREFERENCES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GEANY_DBUS_TYPE_INTERFACE_PREFERENCES))
#define GEANY_DBUS_IS_INTERFACE_PREFERENCES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GEANY_DBUS_TYPE_INTERFACE_PREFERENCES))
#define GEANY_DBUS_INTERFACE_PREFERENCES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GEANY_DBUS_TYPE_INTERFACE_PREFERENCES, GeanyDBusInterfacePreferencesClass))

typedef struct _GeanyDBusInterfacePreferences GeanyDBusInterfacePreferences;
typedef struct _GeanyDBusInterfacePreferencesClass GeanyDBusInterfacePreferencesClass;

#define GEANY_DBUS_TYPE_PROJECT (geany_dbus_project_get_type ())
#define GEANY_DBUS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GEANY_DBUS_TYPE_PROJECT, GeanyDBusProject))
#define GEANY_DBUS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GEANY_DBUS_TYPE_PROJECT, GeanyDBusProjectClass))
#define GEANY_DBUS_IS_PROJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GEANY_DBUS_TYPE_PROJECT))
#define GEANY_DBUS_IS_PROJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GEANY_DBUS_TYPE_PROJECT))
#define GEANY_DBUS_PROJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GEANY_DBUS_TYPE_PROJECT, GeanyDBusProjectClass))

typedef struct _GeanyDBusProject GeanyDBusProject;
typedef struct _GeanyDBusProjectClass GeanyDBusProjectClass;
typedef struct _GeanyDBusApplicationPrivate GeanyDBusApplicationPrivate;

#define GEANY_DBUS_TYPE_DOCUMENT (geany_dbus_document_get_type ())
#define GEANY_DBUS_DOCUMENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GEANY_DBUS_TYPE_DOCUMENT, GeanyDBusDocument))
#define GEANY_DBUS_DOCUMENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GEANY_DBUS_TYPE_DOCUMENT, GeanyDBusDocumentClass))
#define GEANY_DBUS_IS_DOCUMENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GEANY_DBUS_TYPE_DOCUMENT))
#define GEANY_DBUS_IS_DOCUMENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GEANY_DBUS_TYPE_DOCUMENT))
#define GEANY_DBUS_DOCUMENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GEANY_DBUS_TYPE_DOCUMENT, GeanyDBusDocumentClass))

typedef struct _GeanyDBusDocument GeanyDBusDocument;
typedef struct _GeanyDBusDocumentClass GeanyDBusDocumentClass;
typedef struct _GeanyDBusDocumentPrivate GeanyDBusDocumentPrivate;
typedef struct _GeanyDBusInterfacePreferencesPrivate GeanyDBusInterfacePreferencesPrivate;

#define GEANY_DBUS_TYPE_INDENT_PREFS (geany_dbus_indent_prefs_get_type ())
#define GEANY_DBUS_INDENT_PREFS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GEANY_DBUS_TYPE_INDENT_PREFS, GeanyDBusIndentPrefs))
#define GEANY_DBUS_INDENT_PREFS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GEANY_DBUS_TYPE_INDENT_PREFS, GeanyDBusIndentPrefsClass))
#define GEANY_DBUS_IS_INDENT_PREFS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GEANY_DBUS_TYPE_INDENT_PREFS))
#define GEANY_DBUS_IS_INDENT_PREFS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GEANY_DBUS_TYPE_INDENT_PREFS))
#define GEANY_DBUS_INDENT_PREFS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GEANY_DBUS_TYPE_INDENT_PREFS, GeanyDBusIndentPrefsClass))

typedef struct _GeanyDBusIndentPrefs GeanyDBusIndentPrefs;
typedef struct _GeanyDBusIndentPrefsClass GeanyDBusIndentPrefsClass;
typedef struct _GeanyDBusIndentPrefsPrivate GeanyDBusIndentPrefsPrivate;
typedef struct _GeanyDBusProjectPrivate GeanyDBusProjectPrivate;

struct _GeanyDBusServer {
	GObject parent_instance;
	GeanyDBusServerPrivate * priv;
};

struct _GeanyDBusServerClass {
	GObjectClass parent_class;
};

struct _GeanyDBusApplication {
	GObject parent_instance;
	GeanyDBusApplicationPrivate * priv;
};

struct _GeanyDBusApplicationClass {
	GObjectClass parent_class;
	void (*build_starting) (GeanyDBusApplication* self);
};

struct _GeanyDBusDocument {
	GObject parent_instance;
	GeanyDBusDocumentPrivate * priv;
};

struct _GeanyDBusDocumentClass {
	GObjectClass parent_class;
};

struct _GeanyDBusInterfacePreferences {
	GObject parent_instance;
	GeanyDBusInterfacePreferencesPrivate * priv;
};

struct _GeanyDBusInterfacePreferencesClass {
	GObjectClass parent_class;
};

struct _GeanyDBusIndentPrefs {
	GObject parent_instance;
	GeanyDBusIndentPrefsPrivate * priv;
};

struct _GeanyDBusIndentPrefsClass {
	GObjectClass parent_class;
};

struct _GeanyDBusProject {
	GObject parent_instance;
	GeanyDBusProjectPrivate * priv;
};

struct _GeanyDBusProjectClass {
	GObjectClass parent_class;
};


extern GeanyPlugin* geany_plugin;
extern GeanyData* geany_data;
extern GeanyFunctions* geany_functions;
void plugin_set_info (PluginInfo* info);
gint plugin_version_check (gint abi_version);
void plugin_init (GeanyData* data);
void plugin_cleanup (void);
GType geany_dbus_server_get_type (void) G_GNUC_CONST;
#define GEANY_DBUS_NAME "org.geany.DBus"
GeanyDBusServer* geany_dbus_server_new (GeanyPlugin* plugin, GeanyData* data, GeanyFunctions* functions);
GeanyDBusServer* geany_dbus_server_construct (GType object_type, GeanyPlugin* plugin, GeanyData* data, GeanyFunctions* functions);
void geany_dbus_server_close (GeanyDBusServer* self);
void geany_dbus_server_on_document_open_new (GObject* object, struct GeanyDocument* doc, GeanyDBusServer* self);
void geany_dbus_server_on_document_close (GObject* object, struct GeanyDocument* doc, GeanyDBusServer* self);
void geany_dbus_server_on_document_save (GObject* object, struct GeanyDocument* doc, GeanyDBusServer* self);
void geany_dbus_server_on_document_before_save (GObject* object, struct GeanyDocument* doc, GeanyDBusServer* self);
GType geany_dbus_application_get_type (void) G_GNUC_CONST;
guint geany_dbus_application_register_object (void* object, GDBusConnection* connection, const gchar* path, GError** error);
GeanyDBusApplication* geany_dbus_server_get_application (GeanyDBusServer* self);
void geany_dbus_server_set_application (GeanyDBusServer* self, GeanyDBusApplication* value);
GType geany_dbus_interface_preferences_get_type (void) G_GNUC_CONST;
guint geany_dbus_interface_preferences_register_object (void* object, GDBusConnection* connection, const gchar* path, GError** error);
GeanyDBusInterfacePreferences* geany_dbus_server_get_interface_prefs (GeanyDBusServer* self);
void geany_dbus_server_set_interface_prefs (GeanyDBusServer* self, GeanyDBusInterfacePreferences* value);
GType geany_dbus_project_get_type (void) G_GNUC_CONST;
guint geany_dbus_project_register_object (void* object, GDBusConnection* connection, const gchar* path, GError** error);
GeanyDBusProject* geany_dbus_server_get_project (GeanyDBusServer* self);
void geany_dbus_server_set_project (GeanyDBusServer* self, GeanyDBusProject* value);
GeanyDBusApplication* geany_dbus_application_new (GeanyApp* app);
GeanyDBusApplication* geany_dbus_application_construct (GType object_type, GeanyApp* app);
gboolean geany_dbus_application_new_document (GeanyDBusApplication* self);
gboolean geany_dbus_application_open_document (GeanyDBusApplication* self, const char* filename);
void geany_dbus_application_open_documents (GeanyDBusApplication* self, char** filenames, int filenames_length1);
gboolean geany_dbus_application_close_notebook_page (GeanyDBusApplication* self, guint page_number);
gboolean geany_dbus_application_get_debug_mode (GeanyDBusApplication* self);
void geany_dbus_application_set_debug_mode (GeanyDBusApplication* self, gboolean value);
const char* geany_dbus_application_get_config_dir (GeanyDBusApplication* self);
void geany_dbus_application_set_config_dir (GeanyDBusApplication* self, const char* value);
const char* geany_dbus_application_get_data_dir (GeanyDBusApplication* self);
void geany_dbus_application_set_data_dir (GeanyDBusApplication* self, const char* value);
const char* geany_dbus_application_get_doc_dir (GeanyDBusApplication* self);
void geany_dbus_application_set_doc_dir (GeanyDBusApplication* self, const char* value);
char* geany_dbus_application_get_current_document (GeanyDBusApplication* self);
void geany_dbus_application_build_starting (GeanyDBusApplication* self);
GType geany_dbus_document_get_type (void) G_GNUC_CONST;
guint geany_dbus_document_register_object (void* object, GDBusConnection* connection, const gchar* path, GError** error);
GeanyDBusDocument* geany_dbus_document_new (struct GeanyDocument* doc);
GeanyDBusDocument* geany_dbus_document_construct (GType object_type, struct GeanyDocument* doc);
char* geany_dbus_document_get_display_name (GeanyDBusDocument* self);
gboolean geany_dbus_document_reload (GeanyDBusDocument* self);
gboolean geany_dbus_document_save (GeanyDBusDocument* self);
gboolean geany_dbus_document_save_as (GeanyDBusDocument* self, const char* new_filename);
gboolean geany_dbus_document_close (GeanyDBusDocument* self);
gboolean geany_dbus_document_get_has_changed (GeanyDBusDocument* self);
void geany_dbus_document_set_has_changed (GeanyDBusDocument* self, gboolean value);
const char* geany_dbus_document_get_encoding (GeanyDBusDocument* self);
void geany_dbus_document_set_encoding (GeanyDBusDocument* self, const char* value);
const char* geany_dbus_document_get_file_name (GeanyDBusDocument* self);
const char* geany_dbus_document_get_file_type (GeanyDBusDocument* self);
gboolean geany_dbus_document_get_has_bom (GeanyDBusDocument* self);
gboolean geany_dbus_document_get_has_tags (GeanyDBusDocument* self);
gint geany_dbus_document_get_index (GeanyDBusDocument* self);
gboolean geany_dbus_document_get_is_valid (GeanyDBusDocument* self);
gboolean geany_dbus_document_get_is_read_only (GeanyDBusDocument* self);
const char* geany_dbus_document_get_real_path (GeanyDBusDocument* self);
gint geany_dbus_document_get_notebook_page (GeanyDBusDocument* self);
char* geany_dbus_document_get_status_color (GeanyDBusDocument* self);
GeanyDBusInterfacePreferences* geany_dbus_interface_preferences_new (GeanyInterfacePrefs* prefs);
GeanyDBusInterfacePreferences* geany_dbus_interface_preferences_construct (GType object_type, GeanyInterfacePrefs* prefs);
gboolean geany_dbus_interface_preferences_get_sidebar_symbol_visible (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_sidebar_symbol_visible (GeanyDBusInterfacePreferences* self, gboolean value);
gboolean geany_dbus_interface_preferences_get_sidebar_openfiles_visible (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_sidebar_openfiles_visible (GeanyDBusInterfacePreferences* self, gboolean value);
const char* geany_dbus_interface_preferences_get_editor_font (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_editor_font (GeanyDBusInterfacePreferences* self, const char* value);
const char* geany_dbus_interface_preferences_get_tagbar_font (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_tagbar_font (GeanyDBusInterfacePreferences* self, const char* value);
const char* geany_dbus_interface_preferences_get_msgwin_font (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_msgwin_font (GeanyDBusInterfacePreferences* self, const char* value);
gboolean geany_dbus_interface_preferences_get_show_notebook_tabs (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_show_notebook_tabs (GeanyDBusInterfacePreferences* self, gboolean value);
gint geany_dbus_interface_preferences_get_tab_pos_editor (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_tab_pos_editor (GeanyDBusInterfacePreferences* self, gint value);
gint geany_dbus_interface_preferences_get_tab_pos_msgwin (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_tab_pos_msgwin (GeanyDBusInterfacePreferences* self, gint value);
gint geany_dbus_interface_preferences_get_tab_pos_sidebar (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_tab_pos_sidebar (GeanyDBusInterfacePreferences* self, gint value);
gboolean geany_dbus_interface_preferences_get_statusbar_visible (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_statusbar_visible (GeanyDBusInterfacePreferences* self, gboolean value);
gboolean geany_dbus_interface_preferences_get_show_symbol_list_expanders (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_show_symbol_list_expanders (GeanyDBusInterfacePreferences* self, gboolean value);
gboolean geany_dbus_interface_preferences_get_notebook_double_click_hides_widgets (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_notebook_double_click_hides_widgets (GeanyDBusInterfacePreferences* self, gboolean value);
gboolean geany_dbus_interface_preferences_get_highlighting_invert_all (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_highlighting_invert_all (GeanyDBusInterfacePreferences* self, gboolean value);
gint geany_dbus_interface_preferences_get_sidebar_pos (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_sidebar_pos (GeanyDBusInterfacePreferences* self, gint value);
gboolean geany_dbus_interface_preferences_get_msgwin_status_visible (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_msgwin_status_visible (GeanyDBusInterfacePreferences* self, gboolean value);
gboolean geany_dbus_interface_preferences_get_msgwin_compiler_visible (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_msgwin_compiler_visible (GeanyDBusInterfacePreferences* self, gboolean value);
gboolean geany_dbus_interface_preferences_get_msgwin_messages_visible (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_msgwin_messages_visible (GeanyDBusInterfacePreferences* self, gboolean value);
gboolean geany_dbus_interface_preferences_get_msgwin_scribble_visible (GeanyDBusInterfacePreferences* self);
void geany_dbus_interface_preferences_set_msgwin_scribble_visible (GeanyDBusInterfacePreferences* self, gboolean value);
GType geany_dbus_indent_prefs_get_type (void) G_GNUC_CONST;
guint geany_dbus_indent_prefs_register_object (void* object, GDBusConnection* connection, const gchar* path, GError** error);
GeanyDBusIndentPrefs* geany_dbus_indent_prefs_new (GeanyIndentPrefs* prefs);
GeanyDBusIndentPrefs* geany_dbus_indent_prefs_construct (GType object_type, GeanyIndentPrefs* prefs);
gint geany_dbus_indent_prefs_get_width (GeanyDBusIndentPrefs* self);
void geany_dbus_indent_prefs_set_width (GeanyDBusIndentPrefs* self, gint val);
GeanyIndentType geany_dbus_indent_prefs_get_indent_type (GeanyDBusIndentPrefs* self);
void geany_dbus_indent_prefs_set_indent_type (GeanyDBusIndentPrefs* self, GeanyIndentType val);
gint geany_dbus_indent_prefs_get_hard_tab_width (GeanyDBusIndentPrefs* self);
void geany_dbus_indent_prefs_set_hard_tab_width (GeanyDBusIndentPrefs* self, gint val);
GeanyAutoIndent geany_dbus_indent_prefs_get_auto_indent_mode (GeanyDBusIndentPrefs* self);
void geany_dbus_indent_prefs_set_auto_indent_mode (GeanyDBusIndentPrefs* self, GeanyAutoIndent val);
gboolean geany_dbus_indent_prefs_get_detect_type (GeanyDBusIndentPrefs* self);
void geany_dbus_indent_prefs_set_detect_type (GeanyDBusIndentPrefs* self, gboolean val);
GeanyDBusProject* geany_dbus_project_new (GeanyProject* proj);
GeanyDBusProject* geany_dbus_project_construct (GType object_type, GeanyProject* proj);
const char* geany_dbus_project_get_name (GeanyDBusProject* self);
void geany_dbus_project_set_name (GeanyDBusProject* self, const char* value);
const char* geany_dbus_project_get_description (GeanyDBusProject* self);
void geany_dbus_project_set_description (GeanyDBusProject* self, const char* value);
const char* geany_dbus_project_get_file_name (GeanyDBusProject* self);
void geany_dbus_project_set_file_name (GeanyDBusProject* self, const char* value);
const char* geany_dbus_project_get_base_path (GeanyDBusProject* self);
void geany_dbus_project_set_base_path (GeanyDBusProject* self, const char* value);
gint geany_dbus_project_get_project_type (GeanyDBusProject* self);
void geany_dbus_project_set_project_type (GeanyDBusProject* self, gint value);


G_END_DECLS

#endif
